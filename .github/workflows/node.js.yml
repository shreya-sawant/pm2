name: Node.js CI

on: [push, pull_request]

jobs:

  node-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Python
      run: sudo apt install python3
    - name: Install PHP CLI
      run: sudo apt install php-cli
    - name: Install Node.js dependencies
      run: npm install
    - name: Run end-to-end tests
      run: npm run test:e2e
    - name: Run unit tests
      run: npm run test:unit

  bun-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Remove Node.js installed by setup-node action (if any)
      run: |
        if command -v node &> /dev/null; then
          sudo rm -rf "$(which node)"
        fi
        if command -v npm &> /dev/null; then
          sudo rm -rf "$(which npm)"
        fi
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
    - name: Install dependencies using Bun
      run: bun install
    - name: Run end-to-end tests with Bun
      run: bun run test:e2e
    - name: Run unit tests with Bun
      run: bun run test:unit

  node-tests-s390x:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build and test on s390x
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx build --platform linux/s390x --pull --load -t s390x-pm2 . -f- <<EOF
        FROM ubuntu:22.04
        ENV DEBIAN_FRONTEND=noninteractive
        RUN apt-get update && \
            apt-get install -y curl python3 php-cli wget tar xz-utils tzdata && \
            ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
            dpkg-reconfigure --frontend noninteractive tzdata
        WORKDIR /app
        COPY . .
        RUN wget https://nodejs.org/dist/v17.5.0/node-v17.5.0-linux-s390x.tar.xz && \
            tar xf node-v17.5.0-linux-s390x.tar.xz && \
            mv node-v17.5.0-linux-s390x nodejs
        ENV PATH="/app/nodejs/bin:$PATH"
        RUN npm install pm2 -g && npm install && ls -l node_modules/.bin && npm run test:e2e || echo "e2e failed" && npm run test:unit || echo "unit failed"
        EOF

