name: Node.js CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  node-tests:
    name: Node.js Tests on ${{ matrix.platform }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        platform: [amd64, s390x]
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v3

      - name: Setup QEMU (for s390x)
        if: matrix.platform == 's390x'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: s390x

      - name: Run Node.js tests on ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" = "s390x" ]; then
            echo "Running Node.js tests on s390x platform..."
            docker run --rm --platform linux/s390x ubuntu:latest bash -c "
              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt-get install -y apt-utils curl gnupg
              curl -sL https://deb.nodesource.com/setup_20.x | bash -
              apt-get install -y nodejs
              apt-get install -y python3 
              apt-get install -y php-cli
              node -v
              npm -v
              npm install
              npm run test:e2e
              npm run test:unit
            "
          else
            echo "Running Node.js tests on amd64 platform..."
            sudo apt install python3
            sudo apt install php-cli
            npm install
            npm run test:e2e
            npm run test:unit
          fi

  bun-tests:
    name: Bun Tests on ${{ matrix.platform }}
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        platform: [amd64, s390x]

    steps:
      - uses: actions/checkout@v3

      - name: Setup QEMU (for s390x)
        if: matrix.platform == 's390x'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: s390x

      - name: Remove Node.js (if any)
        run: |
          if command -v node &> /dev/null; then sudo rm -rf "$(which node)"; fi
          if command -v npm &> /dev/null; then sudo rm -rf "$(which npm)"; fi

      - name: Run Bun tests on ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" = "s390x" ]; then
            echo "Running Bun tests on s390x platform..."
            docker run --rm --platform linux/s390x ubuntu:latest bash -c "
              export DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC
              ln -fs /usr/share/zoneinfo/\$TZ /etc/localtime
              apt-get update -qq
              apt-get install -y unzip curl python3 php-cli wget tar xz-utils tzdata
               dpkg-reconfigure --frontend noninteractive tzdata
               curl -fsSL https://bun.sh/install | bash
               export BUN_INSTALL=/root/.bun
               export PATH=\$BUN_INSTALL/bin:\$PATH
               source /root/.bashrc
               bun install
               bun run test:e2e
               bun run test:unit
             "
          else
            echo "Running Bun tests on amd64 platform..."
            sudo apt-get update && sudo apt-get install -y python3 php-cli
            curl -fsSL https://bun.sh/install | bash
            export BUN_INSTALL=$HOME/.bun
            export PATH=$BUN_INSTALL/bin:$PATH
            bun install
            bun run test:e2e
            bun run test:unit
          fi

